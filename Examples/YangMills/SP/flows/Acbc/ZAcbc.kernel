#pragma once

template <typename REG> class ZAcbc_kernel
{
public:
  template <typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8,
            typename T9, typename T10, typename T11, typename T12, typename T13>
  static __host__ __device__ auto kernel(const T1 q, const T2 cos1, const T3 cos2, const T4 k, const T5 p,
                                         const T6 &ZA3, const T7 &ZAcbc, const T8 &ZA4, const T9 &dtZc, const T10 &Zc,
                                         const T11 &dtZA, const T12 &ZA, const T13 m2A)
  {
    const double cosp1q = cos1;
    const double cosp2q = 0.5 * (-1. * cos1 + cos2 * (sqrt(3. - 3. * powr<2>(cos1))));
    const double cosp3q = 0.5 * (-1. * cos1 - 1. * cos2 * (sqrt(3. - 3. * powr<2>(cos1))));
    const auto _repl1 = RB(powr<2>(k), 2 * cosp1q * p * q + powr<2>(p) + powr<2>(q));
    const auto _repl2 = ZA(pow(1 + powr<6>(k), 0.16666666666666666));
    const auto _repl3 = ZA((sqrt(2 * cosp1q * p * q + powr<2>(p) + powr<2>(q))));
    const auto _repl4 = ZAcbc((sqrt((2 * (cosp1q - cosp2q) * p * q) / 3. + powr<2>(p) + (2 * powr<2>(q)) / 3.)));
    const auto _repl5 = dtZc(k);
    const auto _repl6 = RB(powr<2>(k), -2 * cosp2q * p * q + powr<2>(p) + powr<2>(q));
    const auto _repl7 = RBdot(powr<2>(k), -2 * cosp2q * p * q + powr<2>(p) + powr<2>(q));
    const auto _repl8 = Zc(k);
    const auto _repl9 = Zc(1.02 * k);
    const auto _repl10 = Zc((sqrt(-2 * cosp2q * p * q + powr<2>(p) + powr<2>(q))));
    const auto _repl11 = dtZA(pow(1 + powr<6>(k), 0.16666666666666666));
    const auto _repl12 = RB(powr<2>(k), powr<2>(q));
    const auto _repl13 = RBdot(powr<2>(k), powr<2>(q));
    const auto _repl14 = ZA(1.02 * pow(1 + powr<6>(k), 0.16666666666666666));
    const auto _repl15 = ZA(q);
    const auto _repl16 = ZAcbc((sqrt(0.6666666666666666)) * (sqrt(cosp2q * p * q + powr<2>(p) + powr<2>(q))));
    const auto _repl17 = RB(powr<2>(k), 2 * cosp2q * p * q + powr<2>(p) + powr<2>(q));
    const auto _repl18 = Zc((sqrt(2 * cosp2q * p * q + powr<2>(p) + powr<2>(q))));
    const auto _repl19 = ZAcbc((sqrt(0.6666666666666666)) * (sqrt(-(cosp2q * p * q) + powr<2>(p) + powr<2>(q))));
    const auto _repl20 =
        ZAcbc((sqrt(0.6666666666666666)) * (sqrt((cosp1q + cosp2q) * p * q + powr<2>(p) + powr<2>(q))));
    const auto _repl21 = RB(powr<2>(k), 2 * (cosp1q + cosp2q) * p * q + powr<2>(p) + powr<2>(q));
    const auto _repl22 = Zc((sqrt(2 * (cosp1q + cosp2q) * p * q + powr<2>(p) + powr<2>(q))));
    return -0.5 * _repl16 * p *
               (_repl12 * (50. * _repl14 - 50. * _repl2) * powr<6>(k) + _repl13 * _repl2 * (1 + powr<6>(k)) +
                _repl11 * _repl12 * (1. + 1. * powr<6>(k))) *
               (q * (2. * cosp2q - 10. * cosp2q * powr<2>(cosp1q) + cosp1q * (-5. + 4. * powr<2>(cosp2q))) *
                    powr<2>(p) +
                (3. + 6. * cosp1q * cosp2q) * powr<3>(p) +
                p *
                    (6. - 4. * cosp2q * powr<3>(cosp1q) + powr<2>(cosp1q) * (-2. - 12. * powr<2>(cosp2q)) -
                     4. * powr<2>(cosp2q) + cosp1q * (6. * cosp2q - 8. * powr<3>(cosp2q))) *
                    powr<2>(q) +
                (-4. * cosp2q + 4. * cosp2q * powr<2>(cosp1q) + cosp1q * (-2. + 12. * powr<2>(cosp2q)) +
                 8. * powr<3>(cosp2q)) *
                    powr<3>(q)) *
               powr<-1>(1. + powr<6>(k)) * powr<-1>(-2. * cosp1q * p * q + powr<2>(p) + powr<2>(q)) *
               powr<-2>(_repl12 * _repl2 + _repl15 * powr<2>(q)) *
               powr<-1>(_repl17 * _repl8 + _repl18 * (2. * cosp2q * p * q + powr<2>(p) + powr<2>(q))) *
               powr<-1>(_repl2 * RB(powr<2>(k), -2 * cosp1q * p * q + powr<2>(p) + powr<2>(q)) +
                        (-2. * cosp1q * p * q + powr<2>(p) + powr<2>(q)) *
                            ZA((sqrt(-2 * cosp1q * p * q + powr<2>(p) + powr<2>(q))))) *
               ZA3((sqrt(0.6666666666666666)) * (sqrt(-(cosp1q * p * q) + powr<2>(p) + powr<2>(q)))) *
               ZAcbc((sqrt((2 * (-cosp1q + cosp2q) * p * q) / 3. + powr<2>(p) + (2 * powr<2>(q)) / 3.))) +
           ZA3((sqrt(0.6666666666666666)) * (sqrt(cosp1q * p * q + powr<2>(p) + powr<2>(q)))) *
               (-3. * _repl19 * _repl4 * (_repl5 * _repl6 + _repl7 * _repl8 + _repl6 * (-50. * _repl8 + 50. * _repl9)) *
                    p *
                    (q *
                         (-0.3333333333333333 * cosp2q + 1.6666666666666667 * cosp2q * powr<2>(cosp1q) +
                          cosp1q * (0.8333333333333334 - 0.6666666666666666 * powr<2>(cosp2q))) *
                         powr<2>(p) +
                     (0.5 + 1. * cosp1q * cosp2q) * powr<3>(p) +
                     p *
                         (1. - 0.6666666666666666 * cosp2q * powr<3>(cosp1q) +
                          powr<2>(cosp1q) * (-0.3333333333333333 - 2. * powr<2>(cosp2q)) -
                          0.6666666666666666 * powr<2>(cosp2q) +
                          cosp1q * (1. * cosp2q - 1.3333333333333333 * powr<3>(cosp2q))) *
                         powr<2>(q) +
                     (0.6666666666666666 * cosp2q - 0.6666666666666666 * cosp2q * powr<2>(cosp1q) +
                      cosp1q * (0.3333333333333333 - 2. * powr<2>(cosp2q)) - 1.3333333333333333 * powr<3>(cosp2q)) *
                         powr<3>(q)) *
                    powr<-1>(2. * cosp1q * p * q + powr<2>(p) + powr<2>(q)) *
                    powr<-1>(_repl12 * _repl2 + _repl15 * powr<2>(q)) *
                    powr<-1>(_repl1 * _repl2 + _repl3 * (2. * cosp1q * p * q + powr<2>(p) + powr<2>(q))) *
                    powr<-2>(_repl6 * _repl8 + _repl10 * (-2. * cosp2q * p * q + powr<2>(p) + powr<2>(q))) +
                0.5 * _repl20 * p *
                    (_repl12 * (50. * _repl14 - 50. * _repl2) * powr<6>(k) + _repl13 * _repl2 * (1 + powr<6>(k)) +
                     _repl11 * _repl12 * (1. + 1. * powr<6>(k))) *
                    (q *
                         (-2. * cosp2q + 18. * cosp2q * powr<2>(cosp1q) + 14. * powr<3>(cosp1q) +
                          cosp1q * (-7. + 4. * powr<2>(cosp2q))) *
                         powr<2>(p) +
                     (-3. + 6. * cosp1q * cosp2q + 6. * powr<2>(cosp1q)) * powr<3>(p) +
                     p *
                         (-6. - 4. * cosp2q * powr<3>(cosp1q) + powr<2>(cosp1q) * (12. - 12. * powr<2>(cosp2q)) +
                          4. * powr<2>(cosp2q) + cosp1q * (14. * cosp2q - 8. * powr<3>(cosp2q))) *
                         powr<2>(q) +
                     (4. * cosp2q - 4. * cosp2q * powr<2>(cosp1q) + cosp1q * (2. - 12. * powr<2>(cosp2q)) -
                      8. * powr<3>(cosp2q)) *
                         powr<3>(q)) *
                    powr<-1>(1. + powr<6>(k)) * powr<-1>(2. * cosp1q * p * q + powr<2>(p) + powr<2>(q)) *
                    powr<-2>(_repl12 * _repl2 + _repl15 * powr<2>(q)) *
                    powr<-1>(_repl1 * _repl2 + _repl3 * (2. * cosp1q * p * q + powr<2>(p) + powr<2>(q))) *
                    powr<-1>(_repl21 * _repl8 +
                             _repl22 * (2. * cosp1q * p * q + 2. * cosp2q * p * q + powr<2>(p) + powr<2>(q))) *
                    ZAcbc((sqrt((2 * (2 * cosp1q + cosp2q) * p * q) / 3. + powr<2>(p) + (2 * powr<2>(q)) / 3.)))) +
           (_repl16 * _repl20 * p * (3 * p + 2 * (cosp1q + 2 * cosp2q) * q) *
            (-1 + 2 * cosp1q * cosp2q + 2 * powr<2>(cosp2q)) *
            (_repl13 * _repl2 +
             _repl12 * (_repl11 + 50. * (_repl14 - _repl2) * powr<6>(k) * powr<-1>(1 + powr<6>(k)))) *
            powr<-2>(_repl12 * _repl2 + _repl15 * powr<2>(q)) *
            powr<-1>(_repl17 * _repl8 + _repl18 * (2 * cosp2q * p * q + powr<2>(p) + powr<2>(q))) *
            powr<-1>(_repl21 * _repl8 + _repl22 * (2 * (cosp1q + cosp2q) * p * q + powr<2>(p) + powr<2>(q))) *
            ZAcbc((sqrt((2 * (cosp1q + 2 * cosp2q) * p * q) / 3. + powr<2>(p) + (2 * powr<2>(q)) / 3.)))) /
               4. -
           1. * _repl19 * (_repl5 * _repl6 + _repl7 * _repl8 + _repl6 * (-50. * _repl8 + 50. * _repl9)) * p *
               (-1.5 * p + 1. * cosp1q * q + 2. * cosp2q * q) * (-0.5 + 1. * cosp1q * cosp2q + 1. * powr<2>(cosp2q)) *
               powr<-1>(_repl12 * _repl2 + _repl15 * powr<2>(q)) *
               powr<-2>(_repl6 * _repl8 + _repl10 * (-2. * cosp2q * p * q + powr<2>(p) + powr<2>(q))) *
               powr<-1>(_repl8 * RB(powr<2>(k), -2 * (cosp1q + cosp2q) * p * q + powr<2>(p) + powr<2>(q)) +
                        (-2. * cosp1q * p * q - 2. * cosp2q * p * q + powr<2>(p) + powr<2>(q)) *
                            Zc((sqrt(-2 * (cosp1q + cosp2q) * p * q + powr<2>(p) + powr<2>(q))))) *
               ZAcbc((sqrt((-2 * (cosp1q + 2 * cosp2q) * p * q) / 3. + powr<2>(p) + (2 * powr<2>(q)) / 3.))) *
               ZAcbc((sqrt(0.6666666666666666)) * (sqrt(-((cosp1q + cosp2q) * p * q) + powr<2>(p) + powr<2>(q)))) -
           1.125 * _repl4 * (_repl5 * _repl6 + _repl7 * _repl8 + _repl6 * (-50. * _repl8 + 50. * _repl9)) * p *
               ((1.3333333333333333 * cosp1q * q - 1.3333333333333333 * cosp2q * q) * powr<2>(p) + 1. * powr<3>(p) +
                p *
                    (0.6666666666666666 - 4. * cosp1q * cosp2q - 1.3333333333333333 * powr<2>(cosp1q) -
                     1.3333333333333333 * powr<2>(cosp2q)) *
                    powr<2>(q) +
                (-0.8888888888888888 * cosp2q + 0.8888888888888888 * cosp2q * powr<2>(cosp1q) +
                 cosp1q * (-0.4444444444444444 + 2.6666666666666665 * powr<2>(cosp2q)) +
                 1.7777777777777777 * powr<3>(cosp2q)) *
                    powr<3>(q)) *
               powr<-1>(2. * cosp1q * p * q + powr<2>(p) + powr<2>(q)) *
               powr<-1>(_repl1 * _repl2 + _repl3 * (2. * cosp1q * p * q + powr<2>(p) + powr<2>(q))) *
               powr<-2>(_repl6 * _repl8 + _repl10 * (-2. * cosp2q * p * q + powr<2>(p) + powr<2>(q))) *
               powr<-1>(_repl8 * RB(powr<2>(k), 2 * (cosp1q - cosp2q) * p * q + 3 * powr<2>(p) + powr<2>(q)) +
                        (2. * cosp1q * p * q - 2. * cosp2q * p * q + 3. * powr<2>(p) + powr<2>(q)) *
                            Zc((sqrt(2 * (cosp1q - cosp2q) * p * q + 3 * powr<2>(p) + powr<2>(q))))) *
               ZAcbc(powr<-1>(sqrt(3)) * (sqrt(2 * (cosp1q - 2 * cosp2q) * p * q + 5 * powr<2>(p) + 2 * powr<2>(q)))) *
               ZAcbc(powr<-1>(sqrt(3)) *
                     (sqrt(4 * cosp1q * p * q - 2 * cosp2q * p * q + 5 * powr<2>(p) + 2 * powr<2>(q))));
  }

  template <typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8,
            typename T9, typename T10>
  static __host__ __device__ auto constant(const T1 k, const T2 p, const T3 &ZA3, const T4 &ZAcbc, const T5 &ZA4,
                                           const T6 &dtZc, const T7 &Zc, const T8 &dtZA, const T9 &ZA, const T10 m2A)
  {
    return 0;
  }

private:
  static __forceinline__ __device__ __host__ auto RB(const auto k2, const auto p2) { return REG::RB(k2, p2); }
  static __forceinline__ __device__ __host__ auto RF(const auto k2, const auto p2) { return REG::RF(k2, p2); }

  static __forceinline__ __device__ __host__ auto RBdot(const auto k2, const auto p2) { return REG::RBdot(k2, p2); }
  static __forceinline__ __device__ __host__ auto RFdot(const auto k2, const auto p2) { return REG::RFdot(k2, p2); }

  static __forceinline__ __device__ __host__ auto dq2RB(const auto k2, const auto p2) { return REG::dq2RB(k2, p2); }
  static __forceinline__ __device__ __host__ auto dq2RF(const auto k2, const auto p2) { return REG::dq2RF(k2, p2); }
};